{"version":3,"sources":["App.tsx"],"names":["App","useState","Date","datetime","datetimeSet","selecting","selectingSet","selected","selectedSet","result","resultSet","availablePicks","useEffect","interval","setInterval","clearInterval","style","styles","container","time","text","toLocaleTimeString","flex","Result","count","origin","x","y","title","row","map","pick","DraftPick","key","marginTop","size","alignSelf","width","onPress","setTimeout","selection","Math","floor","random","length","flexDirection","alignItems","justifyContent","suffix","getSuffix","int","StyleSheet","create","marginVertical","backgroundColor","textAlign","fontFamily","fontWeight","letterSpacing","fontSize","marginHorizontal","color"],"mappings":"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","file":"static/js/app.016fe21f.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from 'react';\nimport { ActivityIndicator, Button, StyleSheet, Text, View } from 'react-native';\nimport ConfettiCannon from 'react-native-confetti-cannon';\n\n\nexport default function App() {\n\n  const [datetime, datetimeSet] = useState(new Date())\n  const [selecting, selectingSet] = useState(false)\n  const [selected, selectedSet] = useState(false)\n  const [result, resultSet] = useState(0)\n\n  const availablePicks = [10, 12]\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      datetimeSet(new Date())\n    }, 1000)\n\n    return () => clearInterval(interval)\n  })\n\n  const handleSelection = () => {\n    selectingSet(true)\n    setTimeout(() => {\n      const selection = Math.floor(Math.random() * availablePicks.length)\n      resultSet(availablePicks[selection])\n      selectingSet(false)\n      selectedSet(true)\n    }, 1500)\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={[styles.time, styles.text]}>{datetime.toLocaleTimeString()}</Text>\n      <View style={{ flex: 1 }}>\n\n        {!selected ? <>\n          <Text style={[styles.title, styles.text]}>Picks Available</Text>\n          <View style={styles.row}>\n            {availablePicks.map((pick: number) => <DraftPick key={pick} {...{ pick }} />)}\n          </View>\n          <View style={{ marginTop: 100, }}>\n            {!selecting\n              ? <View style={{ alignSelf: 'center', width: 320 }}>\n                <Button title=\"Randomly Select Pick\" onPress={handleSelection} /></View>\n              : <ActivityIndicator size={'large'} />}\n          </View>\n        </> : <View style={{ flex: 1 }}>\n          <Result {...{ result }} />\n          <ConfettiCannon count={200} origin={{ x: 0, y: 0 }} />\n        </View>}\n      <StatusBar style=\"auto\" />\n      </View>\n    </View>\n  );\n}\n\nconst Result = ({ result }: { result: null | number }) => {\n  if (!result) return null\n  return (\n    <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center', justifyContent: 'center' }}>\n      <Text style={[styles.text, styles.title, styles.result]}>{result}</Text>\n      <Text style={[styles.text, styles.title, styles.suffix]}>{getSuffix(result)}</Text>\n    </View>\n  )\n}\n\nconst DraftPick = ({ pick }: { pick: number }) => {\n  let suffix = getSuffix(pick)\n  return <Text style={[styles.pick, styles.text]}>{pick}<Text style={styles.suffix}>{suffix}</Text></Text>\n}\n\nconst getSuffix = (int: number) => {\n  switch (int) {\n    case 1:\n      return \"st\"\n    case 2:\n      return \"nd\"\n    case 3:\n      return \"rd\"\n\n    default:\n      return \"th\"\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 60,\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n  },\n  text: { textAlign: \"center\" },\n  time: { fontFamily: 'Futura', fontWeight: 'bold', letterSpacing: 2, fontSize: 20 },\n  title: { textAlign: \"center\", fontFamily: 'Futura', fontWeight: 'normal', letterSpacing: 1, fontSize: 20, marginVertical: 20 },\n  row: { flexDirection: 'row', alignItems: \"center\", justifyContent: \"center\" },\n  pick: { fontSize: 30, marginHorizontal: 10 },\n  suffix: { color: \"#777\" },\n  result: { fontSize: 150 }\n});\n"],"sourceRoot":""}